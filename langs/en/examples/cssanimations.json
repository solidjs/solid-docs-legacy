{"id":"cssanimations","name":"Basic/CSS Animations","description":"Using Solid Transition Group","files":[{"name":"main","type":"jsx","content":"import { createSignal, For, Match, Switch } from \"solid-js\";\nimport { render } from \"solid-js/web\";\nimport { Transition, TransitionGroup } from \"solid-transition-group\";\nimport \"./styles.css\"\n\nfunction shuffle(array) {\n  return array.sort(() => Math.random() - 0.5);\n}\nlet nextId = 10;\n\nconst App = () => {\n  const [show, toggleShow] = createSignal(true),\n    [select, setSelect] = createSignal(0),\n    [numList, setNumList] = createSignal([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n    randomIndex = () => Math.floor(Math.random() * numList().length);\n\n  return (\n    <>\n      <button onClick={() => toggleShow(!show())}>\n        {show() ? \"Hide\" : \"Show\"}\n      </button>\n      <br />\n      <b>Transition:</b>\n      <Transition name=\"slide-fade\">\n        {show() && (\n          <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n            facilisis enim libero, at lacinia diam fermentum id. Pellentesque\n            habitant morbi tristique senectus et netus.\n          </div>\n        )}\n      </Transition>\n      <br />\n      <b>Animation:</b>\n      <Transition name=\"bounce\">\n        {show() && (\n          <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n            facilisis enim libero, at lacinia diam fermentum id. Pellentesque\n            habitant morbi tristique senectus et netus.\n          </div>\n        )}\n      </Transition>\n      <br />\n      <b>Custom JS:</b>\n      <Transition\n        onEnter={(el, done) => {\n          const a = el.animate([{ opacity: 0 }, { opacity: 1 }], {\n            duration: 600\n          });\n          a.finished.then(done);\n        }}\n        onExit={(el, done) => {\n          const a = el.animate([{ opacity: 1 }, { opacity: 0 }], {\n            duration: 600\n          });\n          a.finished.then(done);\n        }}\n      >\n        {show() && (\n          <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n            facilisis enim libero, at lacinia diam fermentum id. Pellentesque\n            habitant morbi tristique senectus et netus.\n          </div>\n        )}\n      </Transition>\n      <br />\n      <b>Switch OutIn</b>\n      <br />\n      <button onClick={() => setSelect((select() + 1) % 3)}>Next</button>\n      <Transition name=\"fade\" mode=\"outin\">\n        <Switch>\n          <Match when={select() === 0}>\n            <p class=\"container\">The First</p>\n          </Match>\n          <Match when={select() === 1}>\n            <p class=\"container\">The Second</p>\n          </Match>\n          <Match when={select() === 2}>\n            <p class=\"container\">The Third</p>\n          </Match>\n        </Switch>\n      </Transition>\n      <b>Group</b>\n      <br />\n      <button\n        onClick={() => {\n          const list = numList(),\n            idx = randomIndex();\n          setNumList([...list.slice(0, idx), nextId++, ...list.slice(idx)]);\n        }}\n      >\n        Add\n      </button>\n      <button\n        onClick={() => {\n          const list = numList(),\n            idx = randomIndex();\n          setNumList([...list.slice(0, idx), ...list.slice(idx + 1)]);\n        }}\n      >\n        Remove\n      </button>\n      <button\n        onClick={() => {\n          const randomList = shuffle(numList().slice());\n          setNumList(randomList);\n        }}\n      >\n        Shuffle\n      </button>\n      <br />\n      <TransitionGroup name=\"list-item\">\n        <For each={numList()}>{(r) => <span class=\"list-item\">{r}</span>}</For>\n      </TransitionGroup>\n    </>\n  );\n};\n\nrender(App, document.getElementById(\"app\"));"},{"name":"styles","type":"css","content":".container {\n  position: relative;\n}\n\n.fade-enter-active,\n.fade-exit-active {\n  transition: opacity 0.5s;\n}\n.fade-enter,\n.fade-exit-to {\n  opacity: 0;\n}\n\n.slide-fade-enter-active {\n  transition: all 0.3s ease;\n}\n.slide-fade-exit-active {\n  transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\n}\n.slide-fade-enter,\n.slide-fade-exit-to {\n  transform: translateX(10px);\n  opacity: 0;\n}\n\n.bounce-enter-active {\n  animation: bounce-in 0.5s;\n}\n.bounce-exit-active {\n  animation: bounce-in 0.5s reverse;\n}\n@keyframes bounce-in {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    transform: scale(1.5);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.list-item {\n  transition: all 0.5s;\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.list-item-enter,\n.list-item-exit-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n.list-item-exit-active {\n  position: absolute;\n}\n"}]}