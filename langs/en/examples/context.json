{"id":"context","name":"Basic/Context","description":"A simple color picker using Context","files":[{"name":"main","type":"tsx","content":"import { render } from \"solid-js/web\";\nimport { ThemeProvider, useTheme } from \"./theme\";\n\nfunction App() {\n  const [theme, { changeColor }] = useTheme();\n\n  return (\n    <>\n      <h1\n        style={{\n          color: theme.color,\n        }}\n      >\n        {theme.title}\n      </h1>\n      <input\n        type=\"color\"\n        name=\"color\"\n        value={theme.color}\n        onInput={(e) => changeColor(e.currentTarget.value)}\n      />\n      <label for=\"color\">Change color theme</label>\n    </>\n  );\n}\n\nrender(\n  () => (\n    <ThemeProvider color=\"#335d92\" title=\"Context Example\">\n      <App />\n    </ThemeProvider>\n  ),\n  document.getElementById(\"app\")!\n);\n"},{"name":"theme","type":"tsx","content":"import { createContext, useContext, ParentComponent } from \"solid-js\";\r\nimport { createStore } from \"solid-js/store\";\r\n\r\nexport type ThemeContextState = {\r\n  readonly color: string;\r\n  readonly title: string;\r\n};\r\nexport type ThemeContextValue = [\r\n  state: ThemeContextState,\r\n  actions: {\r\n    changeColor: (color: string) => void;\r\n    changeTitle: (title: string) => void;\r\n  }\r\n];\r\n\r\nconst defaultState = {\r\n  color: \"#66e6ac\",\r\n  title: \"Fallback Title\",\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextValue>([\r\n  defaultState,\r\n  {\r\n    changeColor: () => undefined,\r\n    changeTitle: () => undefined,\r\n  },\r\n]);\r\n\r\nexport const ThemeProvider: ParentComponent<{\r\n  color?: string;\r\n  title?: string;\r\n}> = (props) => {\r\n  const [state, setState] = createStore({\r\n    color: props.color ?? defaultState.color,\r\n    title: props.title ?? defaultState.title,\r\n  });\r\n\r\n  const changeColor = (color: string) => setState(\"color\", color);\r\n  const changeTitle = (title: string) => setState(\"title\", title);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[state, { changeColor, changeTitle }]}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"}]}